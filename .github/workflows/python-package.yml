# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
#     branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

jobs:
  build:
    name: Build distribution and Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    env:
      SELECTED_VERSION4BUILD: "3.11"

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies for build, pytest
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools wheel
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python -m pytest -v
    - name: Build a binary wheel and a source tarball
      run: |
        python setup.py bdist_wheel
        python setup.py sdist
    - name: Store the distribution packages to artifact
      uses: actions/upload-artifact@v4
      with: 
        name: python-package-distributions
        path: ./dist/*
      if: matrix.python-version == env.SELECTED_VERSION4BUILD
      # Pythonバージョンに依存しないPKGなので、特定のバージョンのみで成果物を保存する



  publish-to-testpypi:
    name: Publish Python distribution to TestPyPI
    if: startsWith(github.ref, 'refs/tags/')
    # only publish to PyPI on tag pushes
    needs: 
    - build
    # buildジョブが全て終わった後（＝artifactには1セットのみ成果物が格納されている）に実行を指定
    runs-on: ubuntu-latest
    permissions:
      id-token: write 
      # IMPORTANT: this permission is mandatory for trusted publishing
      # ※明示的に指定したもの以外は、GITHUB_TOKENの既存権限をnoneに指定する
      #   したがって、たとえばPrivateリポジトリからのCheckoutを行う場合は明示的に
      #   Contentsに対するread権限も付与する必要があることに注意。

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
  


  